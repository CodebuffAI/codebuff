name: Evals

on:
  push:
    branches: ['**']

jobs:
  run-evals:
    if: ${{ contains(github.event.head_commit.message, '[buffbench]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.2.12'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Set environment variables
        env:
          SECRETS_CONTEXT: ${{ toJSON(secrets) }}
        run: |
          VAR_NAMES=$(node scripts/generate-ci-env.js)
          echo "$SECRETS_CONTEXT" | jq -r --argjson vars "$VAR_NAMES" '
            to_entries | .[] | select(.key as $k | $vars | index($k)) | .key + "=" + .value
          ' >> $GITHUB_ENV
          echo "CODEBUFF_GITHUB_ACTIONS=true" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_CB_ENVIRONMENT=test" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_INFISICAL_UP=true" >> $GITHUB_ENV
          echo "CODEBUFF_GITHUB_TOKEN=${{ secrets.CODEBUFF_GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Run evals
        run: bun run --cwd evals run-eval-set
