{
  "id": "6b76d200-9dc6-4842-bda2-6592679cb3fc",
  "prevId": "1915287c-0093-4056-938e-03aae8ddf72e",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.account": {
      "name": "account",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "providerAccountId": {
          "name": "providerAccountId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "token_type": {
          "name": "token_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "session_state": {
          "name": "session_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "account_userId_user_id_fk": {
          "name": "account_userId_user_id_fk",
          "tableFrom": "account",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "account_provider_providerAccountId_pk": {
          "name": "account_provider_providerAccountId_pk",
          "columns": [
            "provider",
            "providerAccountId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.credit_ledger": {
      "name": "credit_ledger",
      "schema": "",
      "columns": {
        "operation_id": {
          "name": "operation_id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "principal": {
          "name": "principal",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "balance": {
          "name": "balance",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "grant_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "priority": {
          "name": "priority",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "org_id": {
          "name": "org_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_credit_ledger_active_balance": {
          "name": "idx_credit_ledger_active_balance",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "balance",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "priority",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"credit_ledger\".\"balance\" != 0 AND \"credit_ledger\".\"expires_at\" IS NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_credit_ledger_org": {
          "name": "idx_credit_ledger_org",
          "columns": [
            {
              "expression": "org_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "credit_ledger_user_id_user_id_fk": {
          "name": "credit_ledger_user_id_user_id_fk",
          "tableFrom": "credit_ledger",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "credit_ledger_org_id_org_id_fk": {
          "name": "credit_ledger_org_id_org_id_fk",
          "tableFrom": "credit_ledger",
          "tableTo": "org",
          "columnsFrom": [
            "org_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.encrypted_api_keys": {
      "name": "encrypted_api_keys",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "api_key_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "api_key": {
          "name": "api_key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "encrypted_api_keys_user_id_user_id_fk": {
          "name": "encrypted_api_keys_user_id_user_id_fk",
          "tableFrom": "encrypted_api_keys",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "encrypted_api_keys_user_id_type_pk": {
          "name": "encrypted_api_keys_user_id_type_pk",
          "columns": [
            "user_id",
            "type"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.fingerprint": {
      "name": "fingerprint",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "sig_hash": {
          "name": "sig_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.message": {
      "name": "message",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "finished_at": {
          "name": "finished_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "client_id": {
          "name": "client_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "client_request_id": {
          "name": "client_request_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "model": {
          "name": "model",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "request": {
          "name": "request",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "last_message": {
          "name": "last_message",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "\"message\".\"request\" -> -1",
            "type": "stored"
          }
        },
        "response": {
          "name": "response",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "input_tokens": {
          "name": "input_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "cache_creation_input_tokens": {
          "name": "cache_creation_input_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "cache_read_input_tokens": {
          "name": "cache_read_input_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "output_tokens": {
          "name": "output_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "cost": {
          "name": "cost",
          "type": "numeric(100, 20)",
          "primaryKey": false,
          "notNull": true
        },
        "credits": {
          "name": "credits",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "latency_ms": {
          "name": "latency_ms",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "fingerprint_id": {
          "name": "fingerprint_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "org_id": {
          "name": "org_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "repo_url": {
          "name": "repo_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "message_fingerprint_id_idx": {
          "name": "message_fingerprint_id_idx",
          "columns": [
            {
              "expression": "fingerprint_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "message_user_id_idx": {
          "name": "message_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "message_finished_at_user_id_idx": {
          "name": "message_finished_at_user_id_idx",
          "columns": [
            {
              "expression": "finished_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "message_org_id_idx": {
          "name": "message_org_id_idx",
          "columns": [
            {
              "expression": "org_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "message_org_id_finished_at_idx": {
          "name": "message_org_id_finished_at_idx",
          "columns": [
            {
              "expression": "org_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "finished_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "message_user_id_user_id_fk": {
          "name": "message_user_id_user_id_fk",
          "tableFrom": "message",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "message_fingerprint_id_fingerprint_id_fk": {
          "name": "message_fingerprint_id_fingerprint_id_fk",
          "tableFrom": "message",
          "tableTo": "fingerprint",
          "columnsFrom": [
            "fingerprint_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "message_org_id_org_id_fk": {
          "name": "message_org_id_org_id_fk",
          "tableFrom": "message",
          "tableTo": "org",
          "columnsFrom": [
            "org_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.org": {
      "name": "org",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "stripe_customer_id": {
          "name": "stripe_customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_subscription_id": {
          "name": "stripe_subscription_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "current_period_start": {
          "name": "current_period_start",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "current_period_end": {
          "name": "current_period_end",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "auto_topup_enabled": {
          "name": "auto_topup_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "auto_topup_threshold": {
          "name": "auto_topup_threshold",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 500
        },
        "auto_topup_amount": {
          "name": "auto_topup_amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 2000
        },
        "credit_limit": {
          "name": "credit_limit",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "billing_alerts": {
          "name": "billing_alerts",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "usage_alerts": {
          "name": "usage_alerts",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "weekly_reports": {
          "name": "weekly_reports",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "org_owner_id_user_id_fk": {
          "name": "org_owner_id_user_id_fk",
          "tableFrom": "org",
          "tableTo": "user",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "org_slug_unique": {
          "name": "org_slug_unique",
          "nullsNotDistinct": false,
          "columns": [
            "slug"
          ]
        },
        "org_stripe_customer_id_unique": {
          "name": "org_stripe_customer_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "stripe_customer_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.org_invite": {
      "name": "org_invite",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "org_id": {
          "name": "org_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "org_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "invited_by": {
          "name": "invited_by",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "accepted_at": {
          "name": "accepted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "accepted_by": {
          "name": "accepted_by",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_org_invite_token": {
          "name": "idx_org_invite_token",
          "columns": [
            {
              "expression": "token",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_org_invite_email": {
          "name": "idx_org_invite_email",
          "columns": [
            {
              "expression": "org_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_org_invite_expires": {
          "name": "idx_org_invite_expires",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "org_invite_org_id_org_id_fk": {
          "name": "org_invite_org_id_org_id_fk",
          "tableFrom": "org_invite",
          "tableTo": "org",
          "columnsFrom": [
            "org_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "org_invite_invited_by_user_id_fk": {
          "name": "org_invite_invited_by_user_id_fk",
          "tableFrom": "org_invite",
          "tableTo": "user",
          "columnsFrom": [
            "invited_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "org_invite_accepted_by_user_id_fk": {
          "name": "org_invite_accepted_by_user_id_fk",
          "tableFrom": "org_invite",
          "tableTo": "user",
          "columnsFrom": [
            "accepted_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "org_invite_token_unique": {
          "name": "org_invite_token_unique",
          "nullsNotDistinct": false,
          "columns": [
            "token"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.org_member": {
      "name": "org_member",
      "schema": "",
      "columns": {
        "org_id": {
          "name": "org_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "org_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "joined_at": {
          "name": "joined_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "org_member_org_id_org_id_fk": {
          "name": "org_member_org_id_org_id_fk",
          "tableFrom": "org_member",
          "tableTo": "org",
          "columnsFrom": [
            "org_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "org_member_user_id_user_id_fk": {
          "name": "org_member_user_id_user_id_fk",
          "tableFrom": "org_member",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "org_member_org_id_user_id_pk": {
          "name": "org_member_org_id_user_id_pk",
          "columns": [
            "org_id",
            "user_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.org_repo": {
      "name": "org_repo",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "org_id": {
          "name": "org_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "repo_url": {
          "name": "repo_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "repo_name": {
          "name": "repo_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "approved_by": {
          "name": "approved_by",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "approved_at": {
          "name": "approved_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {
        "idx_org_repo_active": {
          "name": "idx_org_repo_active",
          "columns": [
            {
              "expression": "org_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_org_repo_unique": {
          "name": "idx_org_repo_unique",
          "columns": [
            {
              "expression": "org_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "repo_url",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "org_repo_org_id_org_id_fk": {
          "name": "org_repo_org_id_org_id_fk",
          "tableFrom": "org_repo",
          "tableTo": "org",
          "columnsFrom": [
            "org_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "org_repo_approved_by_user_id_fk": {
          "name": "org_repo_approved_by_user_id_fk",
          "tableFrom": "org_repo",
          "tableTo": "user",
          "columnsFrom": [
            "approved_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.referral": {
      "name": "referral",
      "schema": "",
      "columns": {
        "referrer_id": {
          "name": "referrer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "referred_id": {
          "name": "referred_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "referral_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "credits": {
          "name": "credits",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "referral_referrer_id_user_id_fk": {
          "name": "referral_referrer_id_user_id_fk",
          "tableFrom": "referral",
          "tableTo": "user",
          "columnsFrom": [
            "referrer_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "referral_referred_id_user_id_fk": {
          "name": "referral_referred_id_user_id_fk",
          "tableFrom": "referral",
          "tableTo": "user",
          "columnsFrom": [
            "referred_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "referral_referrer_id_referred_id_pk": {
          "name": "referral_referrer_id_referred_id_pk",
          "columns": [
            "referrer_id",
            "referred_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.session": {
      "name": "session",
      "schema": "",
      "columns": {
        "sessionToken": {
          "name": "sessionToken",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "fingerprint_id": {
          "name": "fingerprint_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "session_userId_user_id_fk": {
          "name": "session_userId_user_id_fk",
          "tableFrom": "session",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "session_fingerprint_id_fingerprint_id_fk": {
          "name": "session_fingerprint_id_fingerprint_id_fk",
          "tableFrom": "session",
          "tableTo": "fingerprint",
          "columnsFrom": [
            "fingerprint_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.sync_failure": {
      "name": "sync_failure",
      "schema": "",
      "columns": {
        "message_id": {
          "name": "message_id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'stripe'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "last_attempt_at": {
          "name": "last_attempt_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "retry_count": {
          "name": "retry_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "last_error": {
          "name": "last_error",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "idx_sync_failure_retry": {
          "name": "idx_sync_failure_retry",
          "columns": [
            {
              "expression": "retry_count",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "last_attempt_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"sync_failure\".\"retry_count\" < 5",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "sync_failure_message_id_message_id_fk": {
          "name": "sync_failure_message_id_message_id_fk",
          "tableFrom": "sync_failure",
          "tableTo": "message",
          "columnsFrom": [
            "message_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user": {
      "name": "user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "emailVerified": {
          "name": "emailVerified",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_customer_id": {
          "name": "stripe_customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripe_price_id": {
          "name": "stripe_price_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "next_quota_reset": {
          "name": "next_quota_reset",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now() + INTERVAL '1 month'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "referral_code": {
          "name": "referral_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'ref-' || gen_random_uuid()"
        },
        "referral_limit": {
          "name": "referral_limit",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 5
        },
        "discord_id": {
          "name": "discord_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "handle": {
          "name": "handle",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "auto_topup_enabled": {
          "name": "auto_topup_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "auto_topup_threshold": {
          "name": "auto_topup_threshold",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "auto_topup_amount": {
          "name": "auto_topup_amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_email_unique": {
          "name": "user_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        },
        "user_stripe_customer_id_unique": {
          "name": "user_stripe_customer_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "stripe_customer_id"
          ]
        },
        "user_referral_code_unique": {
          "name": "user_referral_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "referral_code"
          ]
        },
        "user_discord_id_unique": {
          "name": "user_discord_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "discord_id"
          ]
        },
        "user_handle_unique": {
          "name": "user_handle_unique",
          "nullsNotDistinct": false,
          "columns": [
            "handle"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.verificationToken": {
      "name": "verificationToken",
      "schema": "",
      "columns": {
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "verificationToken_identifier_token_pk": {
          "name": "verificationToken_identifier_token_pk",
          "columns": [
            "identifier",
            "token"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.referral_status": {
      "name": "referral_status",
      "schema": "public",
      "values": [
        "pending",
        "completed"
      ]
    },
    "public.api_key_type": {
      "name": "api_key_type",
      "schema": "public",
      "values": [
        "anthropic",
        "gemini",
        "openai"
      ]
    },
    "public.grant_type": {
      "name": "grant_type",
      "schema": "public",
      "values": [
        "free",
        "referral",
        "purchase",
        "admin"
      ]
    },
    "public.org_role": {
      "name": "org_role",
      "schema": "public",
      "values": [
        "owner",
        "admin",
        "member"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}